import{_ as i,c as a,o as n,ag as t}from"./chunks/framework.DPDPlp3K.js";const c=JSON.parse('{"title":"ABAP ADT API 라이브러리","description":"","frontmatter":{"layout":"home","hero":{"name":"ABAP ADT API","text":"SAP ABAP 개발 도구 API 라이브러리","tagline":"SAP ABAP 개발을 위한 JavaScript/TypeScript 라이브러리","actions":[{"theme":"brand","text":"시작하기","link":"/getting-started"},{"theme":"alt","text":"API 문서","link":"/api/"},{"theme":"alt","text":"GitHub","link":"https://github.com/marcellourbani/abap-adt-api"}]},"features":[{"icon":"🔄","title":"SAP ABAP과 통합","details":"SAP NetWeaver ABAP 개발 도구(ADT)와 통합된 API를 제공합니다."},{"icon":"💻","title":"프로그래밍 친화적","details":"JavaScript/TypeScript에서 사용하기 쉬운 API 인터페이스를 제공합니다."},{"icon":"🚀","title":"강력한 기능","details":"ABAP 객체 관리, 코드 개발, 디버깅, 테스트 등 다양한 기능을 지원합니다."}]},"headers":[],"relativePath":"index.md","filePath":"index.md"}'),l={name:"index.md"};function h(e,s,p,k,r,d){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="abap-adt-api-라이브러리" tabindex="-1">ABAP ADT API 라이브러리 <a class="header-anchor" href="#abap-adt-api-라이브러리" aria-label="Permalink to &quot;ABAP ADT API 라이브러리&quot;">​</a></h1><p>ABAP ADT API는 SAP의 ABAP Development Tools(ADT) REST API를 JavaScript/TypeScript에서 사용할 수 있게 해주는 라이브러리입니다. 이 라이브러리를 통해 ABAP 개발 환경과 상호작용하는 애플리케이션을 쉽게 개발할 수 있습니다.</p><h2 id="주요-기능" tabindex="-1">주요 기능 <a class="header-anchor" href="#주요-기능" aria-label="Permalink to &quot;주요 기능&quot;">​</a></h2><ul><li>ABAP 시스템 로그인 및 세션 관리</li><li>ABAP 객체 탐색 및 관리</li><li>소스 코드 조회 및 수정</li><li>구문 검사 및 활성화</li><li>트랜스포트 관리</li><li>ABAP Git 통합</li><li>디버깅</li><li>단위 테스트</li><li>그 외 다양한 ADT 기능</li></ul><h2 id="설치" tabindex="-1">설치 <a class="header-anchor" href="#설치" aria-label="Permalink to &quot;설치&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> abap-adt-api</span></span></code></pre></div><h2 id="간단한-사용-예제" tabindex="-1">간단한 사용 예제 <a class="header-anchor" href="#간단한-사용-예제" aria-label="Permalink to &quot;간단한 사용 예제&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { ADTClient } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;abap-adt-api&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 클라이언트 생성 및 로그인</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> client</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ADTClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://your-sap-server.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;username&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;password&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">login</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ABAP 객체 정보 조회</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> objectStructure</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">objectStructure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/sap/bc/adt/programs/programs/Z_YOUR_PROGRAM&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 소스 코드 조회</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sourceUrl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ADTClient.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mainInclude</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(objectStructure);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> source</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getObjectSource</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sourceUrl);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(source);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(console.error);</span></span></code></pre></div><p>자세한 내용은 <a href="/getting-started.html">시작하기</a> 가이드를 참고하세요.</p>`,9)]))}const g=i(l,[["render",h]]);export{c as __pageData,g as default};
