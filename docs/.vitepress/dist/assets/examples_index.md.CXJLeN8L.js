import{_ as i,c as a,o as n,ag as l}from"./chunks/framework.DPDPlp3K.js";const g=JSON.parse('{"title":"예제 개요","description":"","frontmatter":{},"headers":[],"relativePath":"examples/index.md","filePath":"examples/index.md"}'),p={name:"examples/index.md"};function h(t,s,e,k,r,d){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="예제-개요" tabindex="-1">예제 개요 <a class="header-anchor" href="#예제-개요" aria-label="Permalink to &quot;예제 개요&quot;">​</a></h1><p>이 섹션에서는 ABAP ADT API 라이브러리를 사용하는 실제 예제를 제공합니다. 기본 예제부터 고급 예제까지 다양한 사용 사례를 다룹니다.</p><h2 id="기본-예제" tabindex="-1">기본 예제 <a class="header-anchor" href="#기본-예제" aria-label="Permalink to &quot;기본 예제&quot;">​</a></h2><p><a href="./basic.html">기본 예제</a> 페이지에서는 다음과 같은 기본적인 작업에 대한 예제를 찾을 수 있습니다:</p><ul><li>로그인 및 세션 관리</li><li>객체 구조 탐색</li><li>소스 코드 조회 및 수정</li><li>구문 검사 및 활성화</li><li>코드 분석 및 완성</li></ul><h2 id="고급-예제" tabindex="-1">고급 예제 <a class="header-anchor" href="#고급-예제" aria-label="Permalink to &quot;고급 예제&quot;">​</a></h2><p><a href="./advanced.html">고급 예제</a> 페이지에서는 다음과 같은 고급 작업에 대한 예제를 찾을 수 있습니다:</p><ul><li>트랜스포트 관리 자동화</li><li>ABAP Git 저장소 동기화</li><li>단위 테스트 자동화</li><li>코드 품질 분석 (ATC)</li><li>성능 추적 및 분석</li><li>디버깅 자동화</li><li>대량 변경 처리</li></ul><h2 id="예제-살펴보기" tabindex="-1">예제 살펴보기 <a class="header-anchor" href="#예제-살펴보기" aria-label="Permalink to &quot;예제 살펴보기&quot;">​</a></h2><p>각 예제는 다음 구조로 구성되어 있습니다:</p><ol><li><strong>목적</strong>: 예제의 목적 및 해결하려는 문제 설명</li><li><strong>설정</strong>: 필요한 설정 및 전제 조건</li><li><strong>코드</strong>: 예제 코드와 설명</li><li><strong>실행</strong>: 코드 실행 방법 및 예상 결과</li><li><strong>확장</strong>: 예제를 확장하거나 사용자 지정하는 방법에 대한 제안</li></ol><h2 id="예제-실행-방법" tabindex="-1">예제 실행 방법 <a class="header-anchor" href="#예제-실행-방법" aria-label="Permalink to &quot;예제 실행 방법&quot;">​</a></h2><p>예제를 실행하려면 다음이 필요합니다:</p><ol><li>Node.js 및 npm 설치</li><li>유효한 SAP 시스템 접근 권한</li><li>abap-adt-api 라이브러리 설치</li></ol><h3 id="설치-방법" tabindex="-1">설치 방법 <a class="header-anchor" href="#설치-방법" aria-label="Permalink to &quot;설치 방법&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 새 프로젝트 디렉토리 생성</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> abap-adt-examples</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> abap-adt-examples</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># npm 프로젝트 초기화</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># abap-adt-api 및 필요한 패키지 설치</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> abap-adt-api</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> typescript</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ts-node</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># TypeScript 구성 파일 생성</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tsc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --init</span></span></code></pre></div><h3 id="예제-파일-실행" tabindex="-1">예제 파일 실행 <a class="header-anchor" href="#예제-파일-실행" aria-label="Permalink to &quot;예제 파일 실행&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># TypeScript 예제 실행</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ts-node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> example-file.ts</span></span></code></pre></div><h2 id="예제-구성-파일" tabindex="-1">예제 구성 파일 <a class="header-anchor" href="#예제-구성-파일" aria-label="Permalink to &quot;예제 구성 파일&quot;">​</a></h2><p>대부분의 예제에서는 시스템 연결 정보를 포함하는 구성 파일을 사용하는 것이 좋습니다. 이렇게 하면 여러 예제에서 동일한 연결 정보를 재사용할 수 있습니다.</p><p>아래는 <code>config.ts</code> 파일의 기본 구조입니다:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// config.ts</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SAP_CONFIG</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  server: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://your-sap-server.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  username: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;your-username&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  password: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;your-password&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  client: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;001&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 선택적</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  language: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;EN&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 선택적</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 개발, 테스트, 프로덕션 시스템에 대한 구성</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SYSTEMS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  dev: {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SAP_CONFIG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    server: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://dev-sap-server.com&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  test: {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SAP_CONFIG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    server: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://test-sap-server.com&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  prod: {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SAP_CONFIG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    server: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://prod-sap-server.com&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 자주 사용하는 패키지 및 객체</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> COMMON_OBJECTS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  mainPackage: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ZEXAMPLE_PKG&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  mainProgram: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ZEXAMPLE_PROGRAM&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  mainClass: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ZCL_EXAMPLE_CLASS&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  transportRequests: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    dev: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;DEVK900123&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    test: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;TESTK900456&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><h2 id="예제-기여-방법" tabindex="-1">예제 기여 방법 <a class="header-anchor" href="#예제-기여-방법" aria-label="Permalink to &quot;예제 기여 방법&quot;">​</a></h2><p>자신만의 예제를 기여하거나 기존 예제를 개선하려면 GitHub 저장소에 풀 리퀘스트(PR)를 제출하세요.</p><ol><li>저장소를 포크하고 로컬에 클론합니다.</li><li>새 예제를 작성하거나 기존 예제를 수정합니다.</li><li>변경 사항을 커밋하고 포크로 푸시합니다.</li><li>원본 저장소에 풀 리퀘스트를 제출합니다.</li></ol><p>예제 작성 시 다음 지침을 따르세요:</p><ul><li>명확한 문서화: 목적과 사용 방법을 명확히 설명</li><li>모범 사례 준수: 오류 처리, 리소스 정리 등</li><li>실제 사용 사례: 실제 업무에서 발생하는 문제 해결</li><li>재사용성: 다양한 환경에서 활용 가능하도록 작성</li></ul><h2 id="다음-단계" tabindex="-1">다음 단계 <a class="header-anchor" href="#다음-단계" aria-label="Permalink to &quot;다음 단계&quot;">​</a></h2><p>지금부터 다음 섹션의 예제를 살펴보세요:</p><ul><li><a href="./basic.html">기본 예제</a>: 라이브러리의 기본 기능 학습</li><li><a href="./advanced.html">고급 예제</a>: 복잡한 시나리오 및 고급 기능 학습</li></ul><p>또는 <a href="/api/">API 문서</a> 섹션을 참조하여 라이브러리의 다양한 기능에 대해 자세히 알아보세요.</p>`,31)]))}const c=i(p,[["render",h]]);export{g as __pageData,c as default};
